{
	"": {
		"prefix": "ncrmod_snippet",
		"body": [
		  "ll mod(ll x)",
		  "{",
		  "    return ((x % M + M) % M);",
		  "}",
		  "",
		  "ll mmul(ll x, ll y)",
		  "{",
		  "    return mod(mod(x) * mod(y));",
		  "}",
		  "",
		  "const ll N = 1e6 + 2;",
		  "ll fact[N];",
		  "",
		  "void calFact()",
		  "{",
		  "    fact[0] = 1;",
		  "    for (ll i = 1; i < N; i++)",
		  "    {",
		  "        fact[i] = mmul(fact[i - 1], i);",
		  "    }",
		  "}",
		  "",
		  "ll binexp(ll x, ll y)",
		  "{",
		  "    ll sm = 1;",
		  "    while (y)",
		  "    {",
		  "        if (y & 1)",
		  "        {",
		  "            sm = mmul(sm, x);",
		  "        }",
		  "        x = mmul(x, x);",
		  "        y = y >> 1;",
		  "    }",
		  "    return sm;",
		  "}",
		  "",
		  "long long nCr(long long n, long long r)",
		  "{",
		  "    ll a = fact[n], b = fact[n - r], c = fact[r];",
		  "",
		  "    ll deno = mmul(b, c);",
		  "    return mmul(a, binexp(deno, M - 2));",
		  "}"
		],
		"description": ""
	  }
}
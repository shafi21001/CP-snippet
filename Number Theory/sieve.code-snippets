{
	"": {
		"prefix": "sieve_snippet",
		"body": [
		  "const int N = 1e7 + 10;",
		  "vector<bool> is_prime(N, 1);",
		  "void sieve()",
		  "{",
		  "    is_prime[0] = is_prime[1] = false;",
		  "    for (ll i = 2; i * i < N; i++)",
		  "    {",
		  "        if (is_prime[i])",
		  "        {",
		  "            for (ll j = i * i; j < N; j += i)",
		  "            {",
		  "                is_prime[j] = false;",
		  "            }",
		  "        }",
		  "    }",
		  "}",
		  "",
		  "bool isPrimeNumber(ll n) {",
		  "    if (n <= N) {",
		  "        return is_prime[n];",
		  "    }",
		  "",
		  "    // For numbers greater than N, do a simple trial division",
		  "    for (ll i = 2; i * i <= n; ++i) {",
		  "        if (n % i == 0) {",
		  "            return false;",
		  "        }",
		  "    }",
		  "    return true;",
		  "}"
		],
		"description": ""
	  }
}